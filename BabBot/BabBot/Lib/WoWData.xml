<wow_data>
  <version num="3.2.2.10505" max_lvl="80">
    <classes>
        <class armory_id="1" long_name="Warrior" short_name="war" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
        <class armory_id="2" long_name="Palladin" short_name="pally" tab_1_max="26" tab_2_max="26" tab_3_max="26" />
        <class armory_id="3" long_name="Hunter" short_name="hunter" tab_1_max="26" tab_2_max="27" tab_3_max="28" />
        <class armory_id="4" long_name="Rogue" short_name="rogue" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
        <class armory_id="5" long_name="Priest" short_name="priest" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
        <class armory_id="6" long_name="Death Knight" short_name="dk" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
        <class armory_id="7" long_name="Shaman" short_name="sham" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
        <class armory_id="8" long_name="Mage" short_name="mage" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
        <class armory_id="9" long_name="Warlock" short_name="lock" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
        <class armory_id="11" long_name="Druid" short_name="druid" tab_1_max="0" tab_2_max="0" tab_3_max="0" />
      </classes>
    <lua>
      <function name="SetGlueState">
        <parameters>
          1 - realm
          2 - location (US, EU)
          3 - realm type (NORMAL_PVE or others
          3 - Sleeping time if some process pending
        </parameters>
        <return size="6">
          0 - Current Glue Screen
          1 - Pending Glue Screen
          2 - Current Glue Dialog
          3 - Text for Glue Dialog (if any)
          4 - Glue Dialog Parameters (depends of dialog type)
          5 - Is Connected to server
        </return>
        <text>
          <![CDATA[(function()
    local d1, d2, d3
    local found = false

    if (GlueDialog:IsShown()) then
        d1 = GlueDialog.which
        d2 = GlueDialogText:GetText()
        if (GlueDialogHTML:IsShown()) then
            d3 = 'html'
        end
    else
        -- TOS/EULA
        if (TOSFrame:IsShown()) then
            d1 = string.lower(TOSFrame.noticeType)
            local scrollbar = _G[TOSFrame.noticeType .. 'ScrollFrameScrollBar'];
            if (scrollbar:IsShown()) then
                local min, max = scrollbar:GetMinMaxValues()
                scrollbar:SetValue(max)
            end
        else
            -- Realm Selection
            if (RealmList:IsShown()) then
                d1 = 'realmselect'
                d3 = 'not_found'
                for i=1, MAX_REALMS_DISPLAYED, 1 do
                    realmIndex = RealmList.offset + i
                    name, numCharacters, invalidRealm, realmDown = GetRealmInfo(1, realmIndex);
                
                    if (name == '{0}') then
                        if (realmDown) then
                            d3 = 'down'
                        else 
                            if (RealmList.currentRealm ~= realmIndex) then
                                RealmList.refreshTime = {3}

                                prealm = _G['RealmListRealmButton'..RealmList.currentRealm]
                                prealm:UnlockHighlight();

                                realm = _G['RealmListRealmButton'..realmIndex]
                                RealmList.currentRealm = realm:GetID()
		                        RealmList.selectedName = realm.name

                                realm:LockHighlight()
						        RealmListHighlight:SetPoint('TOPLEFT', realm, 'TOPLEFT', 0, 0)
                                RealmListHighlight:Show()
                            end
                        
                            d3 = 'ok'
                        end

                        break;
                    end
                end
            else
                -- Realm Wizard
                if (RealmWizard:IsShown()) then
                    found = false
                    for i = 1, 8 do
                        chkLocationBox = _G['RealmWizardLocationButton' .. i]
                        chkLocationLabel = _G['RealmWizardLocationButton' .. i .. 'Text']
                        chkLocationText = chkLocationLabel:GetText()
                        if (chkLocationText == '{1}') then
                            chkLocationBox:SetChecked(1)
                            RealmWizardLocationButton_OnClick(chkLocationBox.categoryIndex)
            
                            found = true
                        end
                    end

                    if (found) then
                        found = false
                            
                        for i = 1, 4 do
                            checkBox = _G['RealmWizardGameTypeButton'..i]
                            checkLabel = _G['RealmWizardGameTypeButton' .. i .. 'Text']
                            checkText = checkLabel:GetText()
                            if (checkText ~= {2}) then
                                checkBox:SetChecked(0);
                            else
                                checkBox:SetChecked(1);
                                RealmWizardGametypeLabel:SetText(checkText);
                                d3 = 'ok'
                                found = true
                                    
                                break
                            end
                        end

                        if (not found) then
                            d3 = 'type_not_found'
                        end
                    else
                        d3 = 'location_not_found'
                    end
                else
                    -- Patch download
                    if (PatchDownloadUI:IsShown()) then
                        d3 = PatchProgressText:GetText()
                    end
                end
            end
        end
    end

    return CURRENT_GLUE_SCREEN, CURRENT_GLUE_PENDING, d1, d2, d3, IsConnectedToServer()
end)()]]>
        </text>
      </function>
      <function name="SelectCharacter">
        <parameters>
          1 - Character Name
        </parameters>
        <return size="1">
          0 - Character ID in list or null if not found
        </return>
        <text>
          <![CDATA[(function()
  local found = nill
  local numChars = GetNumCharacters();
  for i=1, numChars, 1 do
    local name = GetCharacterInfo(i);
    if (name == '{0}') then
      found = i
      break
    end
  end
  
  if (found) then
    CharacterSelect_SelectCharacter(found)
  end
  return found
end)()]]>
        </text>
      </function>
      <function name="SendLogin">
        <parameters>
          1 - realm
          2 - user
          3 - password
        </parameters>
        <text>
          <![CDATA[(function()
  local realm = AccountLoginRealmName:GetText(serverName);
  if (realm ~= '{0}') then
    AccountLoginRealmName:SetText('{0}')
  end
  
  AccountLoginAccountEdit:SetText('{1}')
  AccountLoginPasswordEdit:SetText('{2}')
  DefaultServerLogin(AccountLoginAccountEdit:GetText(), AccountLoginPasswordEdit:GetText())
end)()]]></text>
      </function>
      <function name="GetCurrentMapContinentId">
        <parameters />
        <return size="1">
          0 - Continent ID
        </return>
        <text>
          <![CDATA[(function()
	SetMapToCurrentZone()
	local continent = GetCurrentMapContinent()
	return continent
end)()]]></text>
      </function>
      <function name="GetAvailTalentPoints">
        <parameters />
        <return size="2">
        0 - Number of available talent points
        1 - Number of proffessions slot available
        </return>
        <text><![CDATA[(function()
  return UnitCharacterPoints("player")
end)()]]></text>
      </function>
      <function name="LearnTalent">
        <parameters>
        1 - Tab ID
        2 - Talent ID
        </parameters>
        <return />
        <text><![CDATA[(function()
    LearnTalent({0}, {1}, false)
end)()]]></text>
      </function>
      <function name="GetTalentInfo">
        <parameters>
        1 - Tab ID
        2 - Talent ID
        </parameters>
        <return size="1">
        0 -  
        </return>
        <text><![CDATA[(function()
    return GetTalentInfo({0}, {1}, false, false)
end)()]]></text>
      </function>

      <!-- Template for new function 
      <function name="">
        <parameters>
        </parameters>
        <return size="">
        </return>
        <text><![CDATA[(function()
  
end)()]]></text>
      </function>
      -->
    </lua>
    
    <talents lvl_start="10" 
      armory_pattern="^http://www.wowarmory.com/talent-calc.xml\?cid=(\d)\&amp;tal=(\d+)$" />
  </version>
</wow_data>